name: Create Release

on:
  push:
    tags:
      - 'v*.*.*' # Ativa quando uma tag como v1.0.0 é criada

jobs:
  build-release:
    runs-on: windows-latest # Usa uma máquina Windows para garantir a compatibilidade do .exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11' # Usa uma versão estável do Python

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $env:GITHUB_OUTPUT

      - name: Build executable with PyInstaller
        run: pyinstaller --onefile --windowed --name UniversalConverter main.py

      - name: Create Release version.json
        id: create_json
        run: |
          $version = "${{ steps.get_version.outputs.VERSION }}"
          $url = "https://github.com/${{ github.repository }}/releases/download/v${version}/UniversalConverter.exe"
          $release_notes = "Lançamento da versão ${version}"
          $json_content = @"
          {
              "version": "${version}",
              "url": "${url}",
              "release_notes": "${release_notes}"
          }
          "@
          echo $json_content | Set-Content -Path ./dist/version.json
          echo "JSON_PATH=./dist/version.json" >> $env:GITHUB_OUTPUT

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./dist/UniversalConverter.exe
            ${{ steps.create_json.outputs.JSON_PATH }}
          body: "Lançamento automatizado da versão ${{ steps.get_version.outputs.VERSION }}."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
