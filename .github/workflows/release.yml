name: Build and Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11' # Using a recent, stable version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Get version from file
        id: version
        run: echo "app_version=$(cat VERSION.txt)" >> $env:GITHUB_OUTPUT

      - name: Package application
        run: flet pack main.py --name UniversalConverter --product-name "Universal Converter" --product-version ${{ steps.version.outputs.app_version }} --onedir
        env:
          PYTHONUTF8: "1"

      - name: Download and Set Up FFmpeg
        run: |
          # URL for the FFmpeg full build
          $ffmpegUrl = "https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-full.7z"
          $ffmpegZipPath = "ffmpeg-release-full.7z"

          # Download the archive
          Invoke-WebRequest -Uri $ffmpegUrl -OutFile $ffmpegZipPath

          # Extract the archive (requires 7-Zip, which is pre-installed on GitHub runners)
          7z x $ffmpegZipPath -offmpeg_extracted

          # Create the assets directory in the packaged application folder
          $assetsDir = "dist/UniversalConverter/assets"
          New-Item -ItemType Directory -Force -Path $assetsDir

          # Copy the necessary FFmpeg executables into the assets directory
          Copy-Item -Path "ffmpeg_extracted/*/bin/ffmpeg.exe" -Destination $assetsDir
          Copy-Item -Path "ffmpeg_extracted/*/bin/ffprobe.exe" -Destination $assetsDir

      - name: Zip the output
        run: |
          Compress-Archive -Path dist/UniversalConverter -DestinationPath dist/UniversalConverter-v${{ steps.version.outputs.app_version }}.zip

      - name: Create Release and Upload Artifact
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*.zip
          tag_name: ${{ github.ref }}
          name: Release ${{ steps.version.outputs.app_version }}
          body: "New release of Universal Converter."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
